import streamlit as st
import cv2 as cv
from PIL import Image, ImageOps

st.set_page_config(
    page_title="üéàHoang Hao's Applications",
    page_icon=Image.open("./images/Logo/logo_welcome.png"),
    layout="wide",
    initial_sidebar_state="expanded",
)
st.title("Handwriting Letter Recognize")

def Text():
    st.header("1. Gi·ªõi thi·ªáu dataset MNIST")
    st.markdown(
                """
                - **MNIST (Modified National Institute of Standards and Technology)** l√† m·ªôt trong nh·ªØng b·ªô d·ªØ li·ªáu n·ªïi ti·∫øng v√† ph·ªï bi·∫øn nh·∫•t trong lƒ©nh v·ª±c h·ªçc m√°y, 
                ƒë·∫∑c bi·ªát l√† trong c√°c b√†i to√°n nh·∫≠n d·∫°ng h√¨nh ·∫£nh. **MNIST** ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ ƒë√°nh gi√° c√°c thu·∫≠t to√°n ph√¢n lo·∫°i h√¨nh ·∫£nh, ƒë·∫∑c bi·ªát l√† c√°c m√¥ h√¨nh h·ªçc s√¢u **(deep learning)**
                """)
    c = st.columns(2)
    with c[0]:
        st.markdown("#### 1.1 T·ªïng quan v·ªÅ dataset MNIST")
        st.markdown(
                """
                - K√≠ch th∆∞·ªõc: Dataset **MNIST** g·ªìm c√≥ $70.000$ h√¨nh ·∫£nh, chia th√†nh hai ph·∫ßn:
                    - $60.000$ h√¨nh ·∫£nh hu·∫•n luy·ªán **(training set)**.
                    - &10.000$ h√¨nh ·∫£nh ki·ªÉm tra **(test set)**.
                """)
    with c[1]:
        st.markdown("#### 1.2 ƒê·∫∑c ƒëi·ªÉm dataset MNIST")
        st.markdown(
                """
                - K√≠ch th∆∞·ªõc h√¨nh ·∫£nh: M·ªói h√¨nh ·∫£nh c√≥ k√≠ch th∆∞·ªõc **28x28** pixel, v·ªõi m·ªói pixel l√† m·ªôt gi√° tr·ªã ƒë·ªô s√°ng **(grayscale)** t·ª´ $0$ ƒë·∫øn $255$.
                - ƒê·ªãnh d·∫°ng d·ªØ li·ªáu: D·ªØ li·ªáu c√≥ d·∫°ng 2D, m·ªói ·∫£nh l√† m·ªôt ma tr·∫≠n **28x28**, v·ªõi m·ªói gi√° tr·ªã l√† ƒë·ªô s√°ng c·ªßa pixel (ƒë∆∞·ª£c chu·∫©n h√≥a t·ª´ $0$ ƒë·∫øn $1$ khi chia cho $255$).
                - K√Ω t·ª± vi·∫øt tay: C√°c h√¨nh ·∫£nh trong b·ªô d·ªØ li·ªáu ƒë∆∞·ª£c thu th·∫≠p t·ª´ c√°c c√¥ng d√¢n M·ªπ, bao g·ªìm c·∫£ tr·∫ª em v√† ng∆∞·ªùi tr∆∞·ªüng th√†nh. C√°c ch·ªØ s·ªë ƒë∆∞·ª£c vi·∫øt tay trong nhi·ªÅu phong c√°ch kh√°c nhau, 
                gi√∫p m√¥ h√¨nh h·ªçc m√°y ph·∫£i c√≥ kh·∫£ nƒÉng nh·∫≠n di·ªán ch·ªØ s·ªë vi·∫øt tay trong c√°c t√¨nh hu·ªëng ƒëa d·∫°ng.
                - L·ªõp nh√£n (Labels): M·ªói h√¨nh ·∫£nh c√≥ m·ªôt nh√£n t∆∞∆°ng ·ª©ng (label) l√† m·ªôt trong c√°c ch·ªØ s·ªë t·ª´ 0 ƒë·∫øn 9.
                """)
    st.markdown("#### 1.3 D∆∞·ªõi ƒë√¢y l√† m·ªôt s·ªë ·∫£nh minh h·ªça dataset MNIST")
    c = st.columns([2, 6, 2])
    image = cv.imread("./images/Handwriting_Letter_Recognize/dataset_MNIST.png")
    c[1].image(image, channels="BGR", caption="Minh h·ªça dataset MNIST")
    st.header("2 Ph∆∞∆°ng ph√°p")
    st.markdown(
            """
            - M√¥ h√¨nh ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ hu·∫•n luy·ªán c√°c k√≠ t·ª± trong dataset **MNIST** l√† m·ªôt m√¥ h√¨nh CNN g·ªìm $13$ l·ªõp bao g·ªìm nhi·ªÅu l·ªõp **convolutional (conv)** v√† **pooling**, 
            v·ªõi c√°c l·ªõp **fully connected (FC)** ·ªü cu·ªëi ƒë·ªÉ th·ª±c hi·ªán ph√¢n lo·∫°i.  
            """)
    st.markdown("#### 2.1 Ki·∫øn tr√∫c c·ªßa m√¥ h√¨nh")
    c = st.columns(2)
    with c[0]:
        st.markdown("##### 2.1.1 Convolutional Block 1")
        st.markdown(
                    """
                    - **L·ªõp 1**: **L·ªõp Conv2D** v·ªõi $32$ b·ªô l·ªçc (filters), m·ªói b·ªô l·ªçc c√≥ k√≠ch th∆∞·ªõc **3x3**, h√†m k√≠ch ho·∫°t ReLU, padding same (gi·ªØ k√≠ch th∆∞·ªõc ƒë·∫ßu ra gi·ªëng v·ªõi ƒë·∫ßu v√†o).
                    - **L·ªõp 2**: **L·ªõp Conv2D** th·ª© hai v·ªõi $32$ b·ªô l·ªçc, gi·ªëng nh∆∞ l·ªõp tr∆∞·ªõc, v·ªõi k√≠ch th∆∞·ªõc kernel **3x3** v√† padding same
                    - **L·ªõp 3**: **L·ªõp MaxPooling2D** v·ªõi kernel **2x2** ƒë·ªÉ gi·∫£m k√≠ch th∆∞·ªõc c·ªßa ƒë·∫∑c tr∆∞ng (·∫£nh) m·ªôt c√°ch hi·ªáu qu·∫£. Sau l·ªõp pooling, chi·ªÅu r·ªông v√† chi·ªÅu cao c·ªßa ·∫£nh gi·∫£m m·ªôt n·ª≠a
                    """   
        )
        st.markdown("##### 2.1.2 Convolutional Block 2")
        st.markdown(
                    """
                    - **L·ªõp 4 & 5**: Hai l·ªõp **Conv2D** v·ªõi $64$ b·ªô l·ªçc, k√≠ch th∆∞·ªõc kernel **3x3**, h√†m k√≠ch ho·∫°t ReLU v√† padding same. C√°c l·ªõp n√†y gi√∫p m√¥ h√¨nh h·ªçc ƒë∆∞·ª£c c√°c ƒë·∫∑c tr∆∞ng ph·ª©c t·∫°p h∆°n c·ªßa ·∫£nh.
                    - **L·ªõp 6**: L·ªõp **MaxPooling2D** v·ªõi kernel **2x2** ƒë·ªÉ ti·∫øp t·ª•c gi·∫£m k√≠ch th∆∞·ªõc ƒë·∫∑c tr∆∞ng v√† l√†m gi·∫£m ƒë·ªô ph·ª©c t·∫°p t√≠nh to√°n.
                    """   
        )
        st.markdown("##### 2.1.3 Convolutional Block 3")
        st.markdown(
                    """
                    - **L·ªõp 7 & 8**: Hai l·ªõp **Conv2D** v·ªõi $128$ b·ªô l·ªçc v√† k√≠ch th∆∞·ªõc kernel **3x3**. C√°c l·ªõp n√†y gi√∫p m√¥ h√¨nh h·ªçc ƒë∆∞·ª£c c√°c ƒë·∫∑c tr∆∞ng chi ti·∫øt h∆°n ·ªü m·ª©c ƒë·ªô cao h∆°n.
                    - **L·ªõp 9**: L·ªõp **MaxPooling2D** gi√∫p gi·∫£m k√≠ch th∆∞·ªõc ·∫£nh, gi·ªØ l·∫°i c√°c ƒë·∫∑c tr∆∞ng quan tr·ªçng trong khi gi·∫£m ƒë·ªô ph√¢n gi·∫£i kh√¥ng gian.
                    """   
        )
    with c[1]:
        st.markdown("##### 2.1.4 Convolutional Block 4")
        st.markdown(
                    """
                    - **L·ªõp 10**: M·ªôt l·ªõp **Conv2D** v·ªõi **256** b·ªô l·ªçc, k√≠ch th∆∞·ªõc kernel **3x3**. Vi·ªác s·ª≠ d·ª•ng nhi·ªÅu b·ªô l·ªçc gi√∫p m√¥ h√¨nh h·ªçc c√°c ƒë·∫∑c tr∆∞ng phong ph√∫ h∆°n v√† gi√∫p c·∫£i thi·ªán 
                    ƒë·ªô ch√≠nh x√°c khi nh·∫≠n di·ªán c√°c ch·ªØ s·ªë vi·∫øt tay.
                    - **L·ªõp 11**: **L·ªõp MaxPooling2D** ti·∫øp theo gi√∫p gi·∫£m k√≠ch th∆∞·ªõc ·∫£nh sau l·ªõp **convolution**.
                    """   
        )
        st.markdown("##### 2.1.4 Fully Connected (FC) Block")
        st.markdown(
                    """
                    - **L·ªõp 12**: L·ªõp **Dense** v·ªõi $512$ units v√† h√†m k√≠ch ho·∫°t ReLU. L·ªõp n√†y s·ª≠ d·ª•ng c√°c ƒë·∫∑c tr∆∞ng h·ªçc ƒë∆∞·ª£c t·ª´ c√°c l·ªõp **convolution** ƒë·ªÉ th·ª±c hi·ªán ph√¢n lo·∫°i.
                    - **L·ªõp 13**: L·ªõp **Dense** cu·ªëi c√πng v·ªõi $10$ units (m·ªôt unit cho m·ªói ch·ªØ s·ªë t·ª´ $0$ ƒë·∫øn $9$) v√† h√†m k√≠ch ho·∫°t softmax ƒë·ªÉ ph√¢n lo·∫°i v√† x√°c su·∫•t c·ªßa m·ªói l·ªõp.
                    """   
        )
    st.markdown("#### 2.2 L√Ω do ch·ªçn ki·∫øn tr√∫c n√†y")
    st.markdown(
                """
                M√¥ h√¨nh **CNN** n√†y s·ª≠ d·ª•ng c·∫•u tr√∫c t∆∞∆°ng t·ª± **VGG** v·ªõi nhi·ªÅu l·ªõp **convolution** v√† **pooling**, th√≠ch h·ª£p cho b√†i to√°n ph√¢n lo·∫°i ch·ªØ s·ªë vi·∫øt tay **MNIST**. 
                Vi·ªác √°p d·ª•ng **padding="same"**, **max-pooling**, v√† **fully connected layers** gi√∫p m√¥ h√¨nh h·ªçc c√°c ƒë·∫∑c tr∆∞ng chi ti·∫øt t·ª´ ·∫£nh v√† c·∫£i thi·ªán ƒë·ªô ch√≠nh x√°c ph√¢n lo·∫°i, 
                ƒë·ªìng th·ªùi gi·∫£m thi·ªÉu nguy c∆° **overfitting**. C·∫•u tr√∫c n√†y l√† m·ªôt l·ª±a ch·ªçn h·ª£p l√Ω v√† hi·ªáu qu·∫£ cho **MNIST**, ƒë·∫°t ƒë∆∞·ª£c k·∫øt qu·∫£ t·ªët v·ªõi ƒë·ªô ch√≠nh x√°c cao trong b√†i to√°n ph√¢n lo·∫°i ch·ªØ s·ªë vi·∫øt tay."
                """
    )
    st.markdown("#### 2.3 Qu√° tr√¨nh hu·∫•n luy·ªán")
    st.markdown("##### 2.3.1 ")
       
def App():
    Text()
App()